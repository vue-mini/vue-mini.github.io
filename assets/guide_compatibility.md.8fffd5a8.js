import{o as e,c as r,a}from"./app.8efcc44e.js";const i='{"title":"兼容性","description":"","frontmatter":{},"headers":[{"level":2,"title":"iOS","slug":"ios"},{"level":2,"title":"Android","slug":"android"},{"level":2,"title":"微信小程序基础库","slug":"微信小程序基础库"},{"level":2,"title":"已知问题","slug":"已知问题"}],"relativePath":"guide/compatibility.md","lastUpdated":1622194741196}',t={},o=a('<h1 id="兼容性"><a class="header-anchor" href="#兼容性" aria-hidden="true">#</a> 兼容性</h1><p>Vue Mini 底层直接依赖于 <a href="https://github.com/vuejs/vue-next/tree/master/packages/reactivity" target="_blank" rel="noopener noreferrer">@vue/reactivity</a>，它的内部使用了 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy" target="_blank" rel="noopener noreferrer">Proxy</a>，所以 Vue Mini 需要运行环境原生支持 ES6。幸运的是绝大部分用户的微信小程序运行环境都已经原生支持 ES6 了。</p><h2 id="ios"><a class="header-anchor" href="#ios" aria-hidden="true">#</a> iOS</h2><p>微信小程序在 iOS 上是使用的是系统的 WebView，而 ES6 是从 iOS 10 开始被原生支持的。所以 Vue Mini 仅兼容 iOS 10 及以上版本。</p><h2 id="android"><a class="header-anchor" href="#android" aria-hidden="true">#</a> Android</h2><p>微信小程序在 Android 上使用的是基于 Mobile Chrome 的自定义 WebView。经测试 Mobile Chrome 的版本为 66（文档编写时所测，将来可能更高），此版本的 Mobile Chrome 已经原生支持 ES6 了。所以理论上 Vue Mini 在 Android 上并没有太大的兼容性问题。</p><h2 id="微信小程序基础库"><a class="header-anchor" href="#微信小程序基础库" aria-hidden="true">#</a> 微信小程序基础库</h2><p>Vue Mini 仅兼容微信小程序基础库 v2.9.0 及以上（参考：<a href="https://github.com/vue-mini/vue-mini/issues/3" target="_blank" rel="noopener noreferrer">#3</a>）。</p><h2 id="已知问题"><a class="header-anchor" href="#已知问题" aria-hidden="true">#</a> 已知问题</h2><ul><li><a href="https://developers.weixin.qq.com/community/develop/doc/00080c83528300fe011a6ed2051400" target="_blank" rel="noopener noreferrer">微信小程序真机并不支持 Generator 函数</a>。</li></ul>',10);t.render=function(a,i,t,n,l,d){return e(),r("div",null,[o])};export default t;export{i as __pageData};
