import{o as n,c as s,a}from"./app.8efcc44e.js";const p='{"title":"定义页面","description":"","frontmatter":{},"headers":[{"level":2,"title":"setup","slug":"setup"},{"level":2,"title":"生命周期","slug":"生命周期"},{"level":2,"title":"与原生语法混用","slug":"与原生语法混用"},{"level":2,"title":"简洁语法","slug":"简洁语法"}],"relativePath":"guide/page.md","lastUpdated":1622194741203}',t={},o=a('<h1 id="定义页面"><a class="header-anchor" href="#定义页面" aria-hidden="true">#</a> 定义页面</h1><p>小程序中的每个页面都需要在对应的 js 文件中使用 <code>definePage</code> 函数进行定义。它是 <code>Page</code> 函数的超集，它额外接收一个 <code>setup</code> 函数。</p><div class="language-js"><pre><code><span class="token comment">// page.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> definePage<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue-mini/wechat&#39;</span>\n\n<span class="token function">definePage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      count<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      double<span class="token operator">:</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">.</span>count<span class="token operator">++</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">,</span>\n      increment<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>如果 <code>setup</code> 返回一个对象，则对象的属性将会被合并到页面实例上，可以直接在页面模版中使用。</p><div class="language-xml"><pre><code><span class="token comment">&lt;!-- page.wxml --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>increment<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  Count is: {{ state.count }}, double is: {{ state.double }}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>注意 <code>setup</code> 返回的 ref 在模板中会自动解开，不需要写 <code>.value</code>。</p><h2 id="setup"><a class="header-anchor" href="#setup" aria-hidden="true">#</a> setup</h2><ul><li><strong>调用时机</strong></li></ul><p><code>setup</code> 会在 <code>onLoad</code> 阶段被调用。返回的数据和方法也会在此时才会被合并到页面实例上，所以模版初次渲染时数据可能是 <code>undefined</code>。不过小程序模版对此做了兼容，所以不用担心会报错。</p><ul><li><strong>调用顺序</strong></li></ul><p>由于页面 <code>onLoad</code> 钩子会晚于所有子组件的 <code>attached</code> 钩子执行，所以 <code>definePage</code> 的 <code>setup</code> 函数会晚于所有子组件的 <code>setup</code> 函数执行。这在某些情况下（如：<a href="/guide/provide-inject.html">依赖注入</a>）可能会造成问题，如果你需要 <code>setup</code> 函数按组件树从上到下依次执行，可以使用<a href="/guide/page-component.html">页面组件</a>。</p><ul><li><strong>参数</strong></li></ul><p><code>setup</code> 函数的第一个参数与 <code>onLoad</code> 的参数相同。</p><div class="language-js"><pre><code><span class="token comment">// page.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> definePage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue-mini/wechat&#39;</span>\n\n<span class="token function">definePage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">query</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// query 为打开当前页面路径中的参数</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>第二个参数提供了一个上下文对象，从小程序页面 <code>this</code> 中选择性的暴露了一些 property。</p><div class="language-js"><pre><code><span class="token comment">// page.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> definePage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue-mini/wechat&#39;</span>\n\n<span class="token function">definePage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">query<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    context<span class="token punctuation">.</span>is\n    context<span class="token punctuation">.</span>route\n    context<span class="token punctuation">.</span>getOpenerEventChannel\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><ul><li><strong><code>this</code> 的用法</strong></li></ul><p><strong><code>this</code> 在 <code>setup()</code> 中不可用</strong>。这是为了避免混乱。</p><h2 id="生命周期"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h2><p>可以直接导入 <code>onXXX</code> 一族的函数来注册生命周期钩子。它们接收的参数和返回值与对应的生命周期一致，除 <code>onShareAppMessage</code>、<code>onShareTimeline</code> 和 <code>onAddToFavorites</code> 外每个 <code>onXXX</code> 函数都能被多次调用。</p><div class="language-js"><pre><code><span class="token comment">// page.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> definePage<span class="token punctuation">,</span> onShow<span class="token punctuation">,</span> onHide<span class="token punctuation">,</span> onUnload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue-mini/wechat&#39;</span>\n\n<span class="token function">definePage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;show&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hide&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token function">onUnload</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;unload&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>这些生命周期钩子注册函数只能在 <code>setup()</code> 期间同步使用，其他场景下调用这些函数会抛出一个错误。</p><p>在 <code>setup()</code> 内同步创建的侦听器和计算状态会在页面销毁时自动删除。</p><ul><li><strong>onPageScroll</strong></li></ul><p>监听页面滚动会引起小程序渲染层与逻辑层的通信。为避免定义空的 <code>onPageScroll</code> 监听造成不必要的性能损耗，需要使用 <code>definePage</code> 的第二个参数提前告知 Vue Mini 是否会调用 <code>onPageScroll()</code> 钩子。</p><div class="language-js"><pre><code><span class="token comment">// page.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> definePage<span class="token punctuation">,</span> onPageScroll <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue-mini/wechat&#39;</span>\n\n<span class="token function">definePage</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span>\n    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">onPageScroll</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> scrollTop <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;scrollTop:&#39;</span><span class="token punctuation">,</span> scrollTop<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    listenPageScroll<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 默认为 false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre></div><p>如果已存在另外的 <code>onPageScroll</code> 选项，那么可以忽略此参数。</p><div class="language-js"><pre><code><span class="token comment">// page.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> definePage<span class="token punctuation">,</span> onPageScroll <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue-mini/wechat&#39;</span>\n\n<span class="token function">definePage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">onPageScroll</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> scrollTop <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;scrollTop (from setup):&#39;</span><span class="token punctuation">,</span> scrollTop<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onPageScroll</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> scrollTop <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;scrollTop (from option):&#39;</span><span class="token punctuation">,</span> scrollTop<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>如果以上两个条件都不满足，在 <code>setup()</code> 中调用 <code>onPageScroll()</code> 钩子会抛出一个错误。</p><ul><li><strong>onShareAppMessage</strong></li></ul><p>由于小程序会根据是否定义了 <code>onShareAppMessage</code> 监听来决定页面是否可以转发，所以需要使用 <code>definePage</code> 的第二个参数提前告知 Vue Mini 是否会调用 <code>onShareAppMessage()</code> 钩子。又由于 <code>onShareAppMessage</code> 会返回自定义转发内容，所以一个页面只能有一个 <code>onShareAppMessage</code> 监听。</p><div class="language-js"><pre><code><span class="token comment">// page.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> definePage<span class="token punctuation">,</span> onShareAppMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue-mini/wechat&#39;</span>\n\n<span class="token function">definePage</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span>\n    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 仅第一次调用，且 `canShareToOthers` 为 `true`，且 `onShareAppMessage` 选项不存在时才生效。</span>\n      <span class="token function">onShareAppMessage</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n          title<span class="token operator">:</span> <span class="token string">&#39;自定义标题&#39;</span><span class="token punctuation">,</span>\n          path<span class="token operator">:</span> <span class="token string">&#39;/my/page/path&#39;</span><span class="token punctuation">,</span>\n          imageUrl<span class="token operator">:</span> <span class="token string">&#39;https://hosts.com/my-image.png&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    canShareToOthers<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 默认为 false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre></div><p>如果条件不满足，在 <code>setup()</code> 中调用 <code>onShareAppMessage()</code> 钩子会抛出一个错误。</p><ul><li><strong>onShareTimeline</strong></li></ul><p>由于小程序会根据是否定义了 <code>onShareTimeline</code> 监听来决定页面是否可以分享到朋友圈，所以需要使用 <code>definePage</code> 的第二个参数提前告知 Vue Mini 是否会调用 <code>onShareTimeline()</code> 钩子。又由于 <code>onShareTimeline</code> 会返回自定义分享内容，所以一个页面只能有一个 <code>onShareTimeline</code> 监听。</p><div class="language-js"><pre><code><span class="token comment">// page.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> definePage<span class="token punctuation">,</span> onShareTimeline <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue-mini/wechat&#39;</span>\n\n<span class="token function">definePage</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span>\n    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 仅第一次调用，且 `canShareToTimeline` 为 `true`，且 `onShareTimeline` 选项不存在时才生效。</span>\n      <span class="token function">onShareTimeline</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n          title<span class="token operator">:</span> <span class="token string">&#39;自定义标题&#39;</span><span class="token punctuation">,</span>\n          query<span class="token operator">:</span> <span class="token string">&#39;a=1&amp;b=2&#39;</span><span class="token punctuation">,</span>\n          imageUrl<span class="token operator">:</span> <span class="token string">&#39;https://hosts.com/my-image.png&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    canShareToTimeline<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 默认为 false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre></div><p>如果条件不满足，在 <code>setup()</code> 中调用 <code>onShareTimeline()</code> 钩子会抛出一个错误。</p><ul><li><strong>onAddToFavorites</strong></li></ul><p>由于 <code>onAddToFavorites</code> 会返回自定义收藏内容，所以一个页面只能有一个 <code>onAddToFavorites</code> 监听。</p><div class="language-js"><pre><code><span class="token comment">// page.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> definePage<span class="token punctuation">,</span> onAddToFavorites <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue-mini/wechat&#39;</span>\n\n<span class="token function">definePage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 仅第一次调用，且 `onAddToFavorites` 选项不存在才生效。</span>\n    <span class="token function">onAddToFavorites</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;自定义标题&#39;</span><span class="token punctuation">,</span>\n        query<span class="token operator">:</span> <span class="token string">&#39;a=xxx&amp;b=xxx&#39;</span><span class="token punctuation">,</span>\n        imageUrl<span class="token operator">:</span> <span class="token string">&#39;https://hosts.com/my-image.png&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>如果条件不满足，在 <code>setup()</code> 中调用 <code>onAddToFavorites()</code> 钩子会抛出一个错误。</p><ul><li><p><strong>生命周期对应关系</strong></p><ul><li><code>onLoad</code> -&gt; <code>setup</code></li><li><code>onShow</code> -&gt; <code>onShow</code></li><li><code>onReady</code> -&gt; <code>onReady</code></li><li><code>onHide</code> -&gt; <code>onHide</code></li><li><code>onUnload</code> -&gt; <code>onUnload</code></li><li><code>onPullDownRefresh</code> -&gt; <code>onPullDownRefresh</code></li><li><code>onReachBottom</code> -&gt; <code>onReachBottom</code></li><li><code>onShareAppMessage</code> -&gt; <code>onShareAppMessage</code></li><li><code>onShareTimeline</code> -&gt; <code>onShareTimeline</code></li><li><code>onAddToFavorites</code> -&gt; <code>onAddToFavorites</code></li><li><code>onPageScroll</code> -&gt; <code>onPageScroll</code></li><li><code>onResize</code> -&gt; <code>onResize</code></li><li><code>onTabItemTap</code> -&gt; <code>onTabItemTap</code></li></ul></li></ul><h2 id="与原生语法混用"><a class="header-anchor" href="#与原生语法混用" aria-hidden="true">#</a> 与原生语法混用</h2><p>由于 <code>definePage()</code> 是 <code>Page()</code> 的超集，所以你也能使用原生语法。</p><div class="language-js"><pre><code><span class="token comment">// page.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> definePage<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue-mini/wechat&#39;</span>\n\n<span class="token function">definePage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      count<span class="token punctuation">.</span>value<span class="token operator">++</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      count<span class="token punctuation">,</span>\n      increment<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  data<span class="token operator">:</span> <span class="token punctuation">{</span>\n    number<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span> number<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>number <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>如果名称相同，<code>setup()</code> 返回的数据或方法会覆盖原生语法声明的数据或方法。你应该避免出现这种情况。</p><p>请不要在其他选项中访问 <code>setup()</code> 返回的数据或方法，这将引起混乱。如果确实有此需求，应该将相关逻辑搬到 <code>setup()</code> 内。</p><h2 id="简洁语法"><a class="header-anchor" href="#简洁语法" aria-hidden="true">#</a> 简洁语法</h2><p>如果不需要使用原生语法，也可以直接传递一个 <code>setup</code> 函数给 <code>definePage()</code>。</p><div class="language-js"><pre><code><span class="token comment">// page.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> definePage<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue-mini/wechat&#39;</span>\n\n<span class="token function">definePage</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    count<span class="token punctuation">.</span>value<span class="token operator">++</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    count<span class="token punctuation">,</span>\n    increment<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div>',50);t.render=function(a,p,t,e,c,u){return n(),s("div",null,[o])};export default t;export{p as __pageData};
